package com.concepts;

public class BitOperator {
    public static void main(String[] args) {
        //位运算

        System.out.println(2 & 3);  //2
        //推导过程
        /*
          1.先得到2的补码，因为计算机运行都是以补码的方式运行的（2的补码 00000000 00000000 00000000 00000010）正数三码合一
          2.先得到3的补码，00000000 00000000 00000000 00000011  （正数三码合一）
          3.按位 &
          00000000 00000000 00000000 00000010
          00000000 00000000 00000000 00000011
          00000000 00000000 00000000 00000010   &运算后的为补码

          运算后的原码：00000000 00000000 00000000 00000010
          原码转为十进制就为2
         */


        System.out.println(~-2);  //1
        //推导过程
        /*
          1.先得到-2的原码：10000000 00000000 00000000 00000010
          2.再得到-2的反码：11111111 11111111 11111111 11111101
          3.得到-2的补码：  11111111 11111111 11111111 11111110
          4.~-2操作：       00000000 00000000 00000000 00000001  （得到补码）
          5.运算后的原码就是：00000000 00000000 00000000 00000001  （得到的补码刚好是正数，正数三码合一）
         */

        System.out.println(~2); //-3
        //推导过程
        /*
          1.得到2的补码：00000000 00000000 00000000 00000010
          2.~2的操作：    11111111 11111111 11111111 11111101 （补码）
          3.运算后的反码：11111111 11111111 11111111 11111100
          4.运算后的原码：10000000 00000000 00000000 00000011
         */


    }
}
